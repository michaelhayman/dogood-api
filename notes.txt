Workflowy stuff to get refocused
goods = Good.all.includes(:user); u = User.first; goods.each do |g|; g.liked_by?(u); end
goods = Good.all.includes(:user); u = User.first; goods.each do |g|; g.likers(User); end
goods = Good.all.joins(:user); u = User.first; goods.each do |g|; g.likers(User); end
goods = Good.includes(:user_likes).all; goods.each do |g|; g.user_likes.each do |l| p l.user_id == 1; end; end;
goods = Good.includes(:user_likes).all; goods.each do |g|; liked = g.user_likes.select { |like| like.user_id == 1 }; g.association("user_likes").target = liked; end; p goods.first.user_likes

Good.includes(:user_likes, :user).where("user_likes.user_id" => 1)
c = Comment.find_all_by_user_id_and_commentable_type(1, "Good").map(&:commentable_id)
Good.where("id in (?)", c)

Good.reset_counters(1, :comments)


CollectionProxy

- locations
    - add foursquare json to good table?
    - location:string
    - active record extensions..
    - the_geom worth using?
- validations
- blah
