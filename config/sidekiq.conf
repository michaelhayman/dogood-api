# /etc/init/sidekiq.conf - Sidekiq config

# This example config should work with Ubuntu 12.04+.  It
# allows you to manage multiple Sidekiq instances with
# Upstart, Ubuntu's native service management tool.
#
# See workers.conf for how to manage all Sidekiq instances at once.
#
# Save this config as /etc/init/sidekiq.conf then mange sidekiq with:
#   sudo start sidekiq index=0
#   sudo stop sidekiq index=0
#   sudo status sidekiq index=0
#
# or use the service command:
#   sudo service sidekiq {start,stop,restart,status}
#
# Heavily modified from the original.

description "Sidekiq Background Worker"

# no "start on", we don't want to automatically start
stop on (stopping workers or runlevel [06])

# change to match your deployment user
setuid mhayman
setgid mhayman

respawn
respawn limit 3 30

# TERM and USR1 are sent by sidekiqctl when stopping sidekiq.  Without declaring these as normal exit codes, it just respawns.
normal exit 0 TERM USR1

instance $index

script
# this script runs in /bin/sh by default
# respawn as bash so we can source in rbenv
exec /bin/bash <<EOT
  export HOME=/home/mhayman

  cd /home/mhayman/setup/dg/api/current
  echo "Stopping sidekiq"

  if [ -d /home/mhayman/setup/dg/api/current ] && [ -f /home/mhayman/setup/dg/api/shared/pids/sidekiq.pid ] && kill -0 `cat /home/mhayman/setup/dg/api/shared/pids/sidekiq.pid`> /dev/null 2>&1; then cd /home/mhayman/setup/dg/api/current && bundle exec sidekiqctl stop /home/mhayman/setup/dg/api/shared/pids/sidekiq.pid 10 ; else echo 'Sidekiq is not running'; fi

  echo "Starting sidekiq"

  /home/mhayman/.rbenv/shims/bundle exec sidekiq --index {$index} --pidfile /home/mhayman/setup/dg/api/shared/pids/sidekiq.pid --environment production --logfile /home/mhayman/setup/dg/api/shared/log/sidekiq.log
EOT
end script

